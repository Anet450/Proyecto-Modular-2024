using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting.Antlr3.Runtime;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.SceneManagement;
//using UnityEditor.PackageManager;
using System.Xml.Serialization;
using Unity.VisualScripting;
using static UnityEngine.Rendering.HDROutputUtils;

public class Virus : MonoBehaviour
{
    //Variables publicas y de control
    public float avance = 0;
    public bool eliminado;
    public bool personaE;
    public bool malaDec;

    [SerializeField]
    private AudioSource alarma;
    [SerializeField]
    private AudioClip alarmaE;

    public Image Barra;
    public float porcentage;
    public TMPro.TextMeshProUGUI Progreso;
    [SerializeField]
    private GameObject ActivarBarra;

    [SerializeField]
    private GameObject ControlComputadoras;

    AsyncOperation Operacion;

    public int final1;
    public int final2;
    public int final3;
    public int final4;
    public int final5;
    public int final6;

    /*
    private void SendEndToServer(int EndingType)
    {
        int PlayID = int.Parse(PlayerPrefs.GetString("PlayID"));
        // Tiempo de float a Int
        int Time = (int) PlayerPrefs.GetFloat("Time");
        int PlayerID = int.Parse(PlayerPrefs.GetString("PlayerID"));
        bool HasFinished = true;
        Play play = new Play(PlayID, Time, PlayerID, HasFinished, EndingType);
        play.UpdataPlay();
    }
    */

    //

    public void Update()
    {
        if(avance == 10)
        {
            alarma.PlayOneShot(alarmaE);
        }

        if(avance >= 99)
        {
            ActivarBarra.SetActive(true);
        }

        if (avance >= 99.5)
        {
            final1 = 1;
            PlayerPrefs.SetInt("final1", final1);
            //Pierde por avance
            //SendEndToServer(2);
            StartCoroutine(FinalSimulacion(3));
            SceneManager.LoadScene(3);
        }
        if (eliminado == true)
        {
            ActivarBarra.SetActive(true);
            //final3 = 3;
            //PlayerPrefs.SetInt("final3", final3);
            StartCoroutine(FinalSimulacion(4));
            // Gana por eliminacion
            //SendEndToServer(1);
        }
        else
        if (eliminado == false && personaE == false && malaDec == true)
        {
            ActivarBarra.SetActive(true);
            // Pierde por decision mala
            //SendEndToServer(3);

            StartCoroutine(FinalSimulacion(5));
        }
        if (personaE == true)
        {
            ActivarBarra.SetActive(true);
            //final2 = 2; //Temporal
            // Pierde por persona equivocada
            //SendEndToServer(4);
            //PlayerPrefs.SetInt("final2", final2);
            
            StartCoroutine(FinalSimulacion(6));
        }


    }

    IEnumerator FinalSimulacion(int nivel)
    {
        Operacion = SceneManager.LoadSceneAsync(nivel);
        Progreso.text = "Cargando Final....";

        while (!Operacion.isDone)
        {
            Barra.fillAmount = Operacion.progress;
            porcentage = Operacion.progress * 100 / 0.9f;
            Progreso.text = "Cargando Final...." + porcentage.ToString("00") + "%";
            yield return null;

        }
    }




}
   
