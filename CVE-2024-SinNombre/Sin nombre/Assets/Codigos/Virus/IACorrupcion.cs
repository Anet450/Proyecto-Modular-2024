using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;

public class IACorrupcion : MonoBehaviour
{
    public Virus virus;
    public bool elegido;
    int contador;
    int reinicio;

    //Contadores
    //_________Proyect Y Program
    public Button MaterialesLab; int clickMatLab = 0; string PYPMatLab = "MaterialesLab";
    public Button MaterialesQui; int clickMatQ = 0; string PYPMatQ = "MaterialesQ";
    public Button MaterialesLim; int clickMatLim = 0; string PYPMatLim = "MaterialesLim";
    public Button MaterialesApoMaqu; int clickMatApoMaqu = 0; string PYPMatApoM = "ApoyoMa";
    public Button ManualesPYP; int clickManPYP = 0; string PYPManPYP = "ManualPYP";
    public Button ManualesPYS; int clickManPYS = 0; string PYPManPYS = "ManualPYS";
    public Button ManualesPYBD; int clickManPYBD = 0; string PYPManPYBD = "ManualPYBD";
    public Button ManualesControl; int clickManControl = 0; string PYPManContr = "ManualControl";
    public Button ManualesArch; int clickManArch = 0; string PYPManArch = "ManualPArch";

    //_________Proyecto Y Special
    public Button Copia; int clickCopia = 0; string PYSCopia = "CopiaSeg";
    public Button BotonPerfil; int clickBotonPerfil = 0; string PYSPerfil = "Perfil";
    public Button ActualizarTodo; int clickActualizarTodo = 0; string PYSActTodo = "ActualizarTodo";
    public Button ActualizarIndividual; int clickActInd = 0; string PYSActInd = "ActualizacionIndividual";
    public Button BotonAplicar; int clickBotonAplicar = 0; string PYSAplicar = "Aplicar";
    public Button BotonAñadir; int clickBotonAñ = 0; string PYSAñadir = "Añadir";
    public Button BotonBuscar; int clickBotonBus = 0; string PYSBuscar = "Buscar";
    public Button BotonLista; int clickBotonList = 0; string PYSLista = "Lista";

    //_______Proyecto Y BD
    public Button RegistroComp; int clickResgComp = 0; string PYBDRegComp = "RegCompB";
    public Button Horario; int clickHorario = 0; string PYBDHor = "HorariosB";
    public Button Personal; int clickPersonal = 0; string PYBDPers = "PersonalB";

    //_______Archivos
    public Button Resultados; int clickResultados = 0; string PYArcResul = "Resultados";
    public Button ResultadosB; int clickResultadosB = 0; string PYArchResulB = "BResultados";
    public Button Programas; int clickProgramas = 0; string PYArchProg = "Programas";
    public Button ProgramasB; int clickProgramasB = 0; string PYArchProgB = "BProgramas";
    public Button Contratos; int clickContratos = 0; string PYArchContra = "Contratos";
    public Button ContratosB; int clickContratosB = 0; string PYArchContraB = "BContratos";
    public Button Contactos; int clickContactos = 0; string PYArchCont = "Contactos";
    public Button ContactosB; int clickContactosB = 0; string PYArchContB = "BContratos";
    public Button BlackMoon; int clickBM = 0; string PYArchBM = "BlackMoon";
    public Button Chains; int clickChains = 0; string PYArchC = "Chans";
    public Button Empresa; int clickEmpresa = 0; string PYArchE = "Empresa";
    public Button Auditorias; int clickAudi = 0; string PYArchAu = "Auditorias";
    public Button Revisiones; int clickRevi = 0; string PYArchRev = "Revisiones";
    public Button Inventario; int clickInv = 0; string PYArchInv = "Inventarios";


    List<IACorrupcion> ContadorClicks = new List<IACorrupcion>();

    private void Start()
    {

    }

    public void AgregarContadores()
    {

        if (MaterialesLab.interactable == true && clickMatLab >= 4)
        {
            AsignarContador(PYPMatLab, clickMatLab);

        }
        if (MaterialesQui.interactable == true && clickMatQ >= 4)
        {
            AsignarContador(PYPMatQ, clickMatQ);
        }
        if (MaterialesLim.interactable == true && clickMatLim >= 4)
        {
            AsignarContador(PYPMatLim, clickMatLim);
        }
        if (MaterialesApoMaqu.interactable == true && clickMatApoMaqu >= 4)
        {
            AsignarContador(PYPMatApoM, clickMatApoMaqu);
        }
        if (ManualesPYP.interactable == true && clickManPYP >= 4)
        {
            AsignarContador(PYPManPYP, clickManPYP);
        }
        if (ManualesPYS.interactable == true && clickManPYS >= 4)
        {
            AsignarContador(PYPManPYS, clickManPYS);
        }
        if (ManualesPYBD.interactable == true && clickManPYBD >= 4)
        {
            AsignarContador(PYPManPYBD, clickManPYBD);
        }
        if (ManualesControl.interactable == true && clickManControl >= 4)
        {
            AsignarContador(PYPManContr, clickManControl);
        }
        if (ManualesArch.interactable == true && clickManArch >= 4)
        {
            AsignarContador(PYPManArch, clickManArch);
        }

        //_______PYS

        if (Copia.interactable == true && clickCopia >= 4)
        {
            AsignarContador(PYSCopia, clickCopia);
        }
        if (BotonPerfil.interactable == true && clickBotonPerfil >= 4)
        {
            AsignarContador(PYSPerfil, clickBotonPerfil);
        }
        if (ActualizarTodo.interactable == true && clickActualizarTodo >= 4)
        {
            AsignarContador(PYSActTodo, clickActualizarTodo);
        }
        if (ActualizarIndividual.interactable == true && clickActInd >= 4)
        {
            AsignarContador(PYSActInd, clickActInd);
        }
        if (BotonAñadir.interactable == true && clickBotonAñ >= 4)
        {
            AsignarContador(PYSAñadir, clickBotonAñ);
        }
        if (BotonBuscar.interactable == true && clickBotonBus >= 4)
        {
            AsignarContador(PYSBuscar, clickBotonBus);
        }
        if (BotonLista.interactable == true && clickBotonList >= 4)
        {
            AsignarContador(PYSLista, clickBotonList);
        }
        if (BotonAplicar.interactable == true && clickBotonAplicar >= 4)
        {
            AsignarContador(PYSAplicar, clickBotonAplicar);
        }

        //________PYBD

        if (RegistroComp.interactable == true && clickResgComp >= 4)
        {
            AsignarContador(PYBDRegComp, clickResgComp);
        }
        if (Horario.interactable == true && clickHorario >= 4)
        {
            AsignarContador(PYBDHor, clickHorario);
        }
        if (Personal.interactable == true && clickPersonal >= 4)
        {
            AsignarContador(PYBDPers, clickPersonal);
        }

        //__________PY Archivos
        if (Resultados.interactable == true && clickResultados >= 4)
        {
            AsignarContador(PYArcResul, clickResultados);
        }
        if (ResultadosB.interactable == true && clickResultadosB >= 4)
        {
            AsignarContador(PYArchResulB, clickResultadosB);
        }
        if (Programas.interactable == true && clickProgramas >= 4)
        {
            AsignarContador(PYArchProg, clickProgramas);
        }
        if (ProgramasB.interactable == true && clickProgramasB >= 4)
        {
            AsignarContador(PYArchProgB, clickProgramas);
        }
        if (Contratos.interactable == true && clickContratos >= 4)
        {
            AsignarContador(PYArchContra, clickContratos);
        }
        if (ContratosB.interactable == true && clickContratosB >= 4)
        {
            AsignarContador(PYArchContraB, clickContratosB);
        }
        if (Contactos.interactable == true && clickContactos >= 4)
        {
            AsignarContador(PYArchCont, clickContactos);
        }
        if (ContactosB.interactable == true && clickContactosB >= 4)
        {
            AsignarContador(PYArchContB, clickContactosB);
        }
        if (BlackMoon.interactable == true && clickBM >= 4)
        {
            AsignarContador(PYArchBM, clickBM);
        }
        if (Chains.interactable == true && clickChains >= 4)
        {
            AsignarContador(PYArchC, clickChains);
        }
        if (Empresa.interactable == true && clickEmpresa >= 4)
        {
            AsignarContador(PYArchE, clickEmpresa);
        }
        if (Auditorias.interactable == true && clickAudi >= 4)
        {
            AsignarContador(PYArchAu, clickAudi);
        }
        if (Revisiones.interactable == true && clickRevi >= 4)
        {
            AsignarContador(PYArchRev, clickRevi);
        }
        if (Inventario.interactable == true && clickInv >= 4)
        {
            AsignarContador(PYArchInv, clickInv);
        }

        Debug.Log("Número de contadores en la lista: " + ContadorClicks.Count);
    }
    void Update()
    {
        if (Input.GetKeyDown(KeyCode.B))
        {
            elegido = true;
        }
        if (elegido == true) {

            AgregarContadores();

            IACorrupcion contadorConMayorNumero = ObtenerContadorConMayorNumero();

            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPMatLab)
            {
                BotonMaterialesLab(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPMatQ)
            {
                BotonMaterialQui(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPMatLim)
            {
                BotonMaterialLim(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPMatApoM)
            {
                BotonMaterialApoMa(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPManPYP)
            {
                BotonManualPYP(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPManPYS)
            {
                BotonManualPYS(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPManPYBD)
            {
                BotonManualPYBD(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPManContr)
            {
                BotonManualPYControl(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYPManArch)
            {
                BotonManualPYArchivo(3);
            }
            //_______PYS
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSCopia)
            {
                BotonPYSCopias(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSPerfil)
            {
                BotonPYSPerfil(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSActTodo)
            {
                BotonPYSActualizarTodo(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSActInd)
            {
                BotonPYSActualizarInd(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSAñadir)
            {
                BotonPYSAñadir(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSBuscar)
            {
                BotonPYSBuscar(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSLista)
            {
                BotonPYSLista(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYSAplicar)
            {
                BotonPYSAplicarActu(3);
            }

            //____--PYBD

            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYBDRegComp)
            {
                BotonPYBDRegistroComp(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYBDHor)
            {
                BotonPYBDHorarios(3);
            }
            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYBDPers)
            {
                BotonPYBDPersonal(3);
            }

            //_________PY Archivos

            if(contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArcResul)
            {
                BotonPYArchResulatados(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchResulB)
            {
                BotonPYArchResultadosB(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchProg)
            {
                BotonPYArchProgramas(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchProgB)
            {
                BotonPYArchProgramasB(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchContra)
            {
                BotonPYArchContratos(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchContraB)
            {
                BotonPYArchContratosB(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchCont)
            {
                BotonPYArchContactos(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchContB)
            {
                BotonPYArchContactosB(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchBM)
            {
                BotonPYArchBlackMoon(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchC)
            {
                BotonPYArchChains(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchE)
            {
                BotonPYArchEmpresa(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchAu)
            {
                BotonPYArchAuditorias(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchRev)
            {
                BotonPYArchRevisiones(3);
            }
            if (contadorConMayorNumero != null && contadorConMayorNumero.gameObject.name == PYArchInv)
            {
                BotonPYArchInventario(3);
            }

            Debug.Log(contadorConMayorNumero);
            ContadorClicks.Clear();

            elegido = false;
            Reiniciar();
        }
    }

    public void AsignarContador(string nombre, int valorInicial)
    {

        GameObject nuevoContadorObj = new GameObject(nombre);
        IACorrupcion nuevoContador = nuevoContadorObj.AddComponent<IACorrupcion>();
        nuevoContador.contador = valorInicial;
        ContadorClicks.Add(nuevoContador);
    }
    
    
    IACorrupcion ObtenerContadorConMayorNumero()
    {
        IACorrupcion contadorMayor = null;
        int maxNumero = int.MinValue;

        foreach (IACorrupcion contador in ContadorClicks)
        {
            if (contador.contador > maxNumero)
            {
                maxNumero = contador.contador;
                contadorMayor = contador;
            }
        }

        return contadorMayor;
        
    }

    public void Reiniciar()
    {
        BotonMaterialesLab(2);
        BotonMaterialQui(2);
        BotonMaterialLim(2);
        BotonMaterialApoMa(2);
        BotonManualPYP(2);
        BotonManualPYS(2);
        BotonManualPYBD(2);
        BotonManualPYControl(2);
        BotonManualPYArchivo(2);

        BotonPYSCopias(2);
        BotonPYSPerfil(2);
        BotonPYSActualizarTodo(2);
        BotonPYSActualizarInd(2);
        BotonPYSAplicarActu(2);
        BotonPYSAñadir(2);
        BotonPYSBuscar(2);
        BotonPYSLista(2);

        BotonPYBDRegistroComp(2);
        BotonPYBDHorarios(2);
        BotonPYBDPersonal(2);

        BotonPYArchResulatados(2);
        BotonPYArchResultadosB(2);
        BotonPYArchProgramas(2);
        BotonPYArchProgramasB(2);
        BotonPYArchContratos(2);
        BotonPYArchContratosB(2);
        BotonPYArchContactos(2);
        BotonPYArchContactosB(2);
        BotonPYArchBlackMoon(2);
        BotonPYArchChains(2);
        BotonPYArchEmpresa(2);
        BotonPYArchAuditorias(2);
        BotonPYArchRevisiones(2);
        BotonPYArchInventario(2);

    }
  
    public void BotonMaterialesLab(int i)
    {
        switch (i) {
            case 1:
                clickMatLab++;
                Debug.Log("Boton materiales lab" + clickMatLab);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("MaterialesLab");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                        }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickMatLab < 4)
                {
                }
                else if (clickMatLab >= 4)
                {
                    clickMatLab = 0;
                }
                break;
            case 3:
                MaterialesLab.interactable = false;
                break;
        }
    }

    public void BotonMaterialQui(int i)
    {
        switch (i)
        {
            case 1:
                clickMatQ++;
                Debug.Log("Boton materiales Qui" + clickMatQ);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("MaterialesQ");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickMatQ < 4)
                {
                }
                else if (clickMatLab >= 4)
                {
                    clickMatQ = 0;
                }
                break;
            case 3:
                MaterialesQui.interactable = false;
                break;
        }
    }

    public void BotonMaterialLim(int i)
    {
        switch (i)
        {
            case 1:
                clickMatLim++;
                Debug.Log("Boton materiales Lim" + clickMatLim);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("MaterialesLim");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickMatLim < 4)
                {
                    
                }
                else if (clickMatLim >= 4)
                {
                    clickMatLim = 0;
                }
                break;
            case 3:
                MaterialesLim.interactable = false;
                break;
        }
    }

    public void BotonMaterialApoMa(int i)
    {
        switch (i)
        {
            case 1:
                clickMatApoMaqu++;
                Debug.Log("Boton materiales Apoyo Maquinas" + clickMatApoMaqu);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ApoyoMa");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickMatApoMaqu < 4)
                {

                }
                else if (clickMatApoMaqu >= 4)
                {
                    clickMatApoMaqu = 0;
                }
                break;
            case 3:
                MaterialesApoMaqu.interactable = false;
                break;
        }
    }

    public void BotonManualPYP(int i)
    {
        switch (i)
        {
            case 1:
                clickManPYP++;
                Debug.Log("Boton materiales Manual de PYP " + clickManPYP);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ManualPYP");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickManPYP < 4)
                {

                }
                else if (clickManPYP >= 4)
                {
                    clickManPYP = 0;
                }
                break;
            case 3:
                ManualesPYP.interactable = false;
                break;
        }
    }

    public void BotonManualPYS(int i)
    {
        switch (i)
        {
            case 1:
                clickManPYS++;
                Debug.Log("Boton materiales Manual de PYS " + clickManPYS);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ManualPYS");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickManPYS < 4)
                {

                }
                else if (clickManPYS >= 4)
                {
                    clickManPYS = 0;
                }
                break;
            case 3:
                ManualesPYS.interactable = false;
                break;
        }
    
    }

    public void BotonManualPYBD(int i)
    {
        switch (i)
        {
            case 1:
                clickManPYBD++;
                Debug.Log("Boton materiales Manual de PYBD " + clickManPYBD);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ManualPYBD");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickManPYBD < 4)
                {

                }
                else if (clickManPYBD >= 4)
                {
                    clickManPYBD = 0;
                }
                break;
            case 3:
                ManualesPYBD.interactable = false;
                break;
        }
    }

    public void BotonManualPYControl(int i)
    {
        switch (i)
        {
            case 1:
                clickManControl++;
                Debug.Log("Boton materiales Manual de Control " + clickManControl);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ManualControl");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickManControl < 4)
                {

                }
                else if (clickManControl >= 4)
                {
                    clickManControl = 0;
                }
                break;
            case 3:
                ManualesControl.interactable = false;
                break;
        }
    }
    
    public void BotonManualPYArchivo(int i)
    {
        switch (i)
        {
            case 1:
                clickManArch++;
                Debug.Log("Boton materiales Manual de Archivo " + clickManArch);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ManualPArch");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickManArch < 4)
                {

                }
                else if (clickManArch >= 4)
                {
                    clickManArch = 0;
                }
                break;
            case 3:
                ManualesArch.interactable = false;
                break;
        }
    }

    //__________PYS

    public void BotonPYSCopias(int i)
    {
        switch (i)
        {
            case 1:
                clickCopia++;
                Debug.Log("Boton materiales boton Copia " + clickCopia);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("CopiaSeg");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickCopia < 4)
                {

                }
                else if (clickCopia >= 4)
                {
                    clickCopia = 0;
                }
                break;
            case 3:
                Copia.interactable = false;
                break;
        }
    }

    public void BotonPYSPerfil(int i)
    {
        switch (i)
        {
            case 1:
                clickBotonPerfil++;
                Debug.Log("Boton materiales boton Perfil " + clickBotonPerfil);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Perfil");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickBotonPerfil < 4)
                {

                }
                else if (clickBotonPerfil >= 4)
                {
                    clickBotonPerfil = 0;
                }
                break;
            case 3:
                BotonPerfil.interactable = false;
                break;
        }
    }

    public void BotonPYSActualizarTodo(int i)
    {
        switch (i)
        {
            case 1:
                clickActualizarTodo++;
                Debug.Log("Boton materiales boton Actualizar todo " + clickActualizarTodo);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ActualizarTodo");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickActualizarTodo < 4)
                {

                }
                else if (clickActualizarTodo >= 4)
                {
                    clickActualizarTodo = 0;
                }
                break;
            case 3:
                ActualizarTodo.interactable = false;
                break;
        }
    }

    public void BotonPYSActualizarInd(int i)
    {
        switch (i)
        {
            case 1:
                clickActInd++;
                Debug.Log("Boton materiales boton Actualizar Individual " + clickActInd);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("ActualizacionIndividual");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickActInd < 4)
                {

                }
                else if (clickActInd >= 4)
                {
                    clickActInd = 0;
                }
                break;
            case 3:
                ActualizarIndividual.interactable = false;
                break;
        }
    }

    public void BotonPYSAplicarActu(int i)
    {
        switch (i)
        {
            case 1:
                clickBotonAplicar++;
                Debug.Log("Boton materiales boton Buscar Aplicar " + clickBotonAplicar);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Aplicar");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickBotonAplicar < 4)
                {

                }
                else if (clickBotonAplicar >= 4)
                {
                    clickBotonAplicar = 0;
                }
                break;
            case 3:
                BotonAplicar.interactable = false;
                break;
        }
    }

    public void BotonPYSAñadir(int i)
    {
        switch (i)
        {
            case 1:
                clickBotonAñ++;
                Debug.Log("Boton materiales boton Añadir Perfil " + clickBotonAñ);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Añadir");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickBotonAñ < 4)
                {

                }
                else if (clickBotonAñ >= 4)
                {
                    clickBotonAñ = 0;
                }
                break;
            case 3:
                BotonAñadir.interactable = false;
                break;
        }
    }

    public void BotonPYSBuscar(int i)
    {
        switch (i)
        {
            case 1:
                clickBotonBus++;
                Debug.Log("Boton materiales boton Buscar Perfil " + clickBotonBus);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Buscar");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickBotonBus < 4)
                {

                }
                else if (clickBotonBus >= 4)
                {
                    clickBotonBus = 0;
                }
                break;
            case 3:
                BotonBuscar.interactable = false;
                break;
        }
    }

    public void BotonPYSLista(int i)
    {
        switch (i)
        {
            case 1:
                clickBotonList++;
                Debug.Log("Boton materiales boton Lista Perfil " + clickBotonList);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Lista");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickBotonList < 4)
                {

                }
                else if (clickBotonList >= 4)
                {
                    clickBotonList = 0;
                }
                break;
            case 3:
                BotonLista.interactable = false;
                break;
        }
    }

    //________PYBD
    public void BotonPYBDRegistroComp(int i)
    {
        switch (i)
        {
            case 1:
                clickResgComp++;
                Debug.Log("Boton materiales boton Registro computadoras " + clickResgComp);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("RegCompB");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickResgComp < 4)
                {

                }
                else if (clickResgComp >= 4)
                {
                    clickResgComp = 0;
                }
                break;
            case 3:
                RegistroComp.interactable = false;
                break;
        }
    }

    public void BotonPYBDHorarios(int i)
    {
        switch (i)
        {
            case 1:
                clickHorario++;
                Debug.Log("Boton materiales boton Horarios " + clickHorario);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("HorariosB");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickHorario < 4)
                {

                }
                else if (clickHorario >= 4)
                {
                    clickHorario = 0;
                }
                break;
            case 3:
                Horario.interactable = false;
                break;
        }
    }

    public void BotonPYBDPersonal(int i)
    {
        switch (i)
        {
            case 1:
                clickPersonal++;
                Debug.Log("Boton materiales boton Personal " + clickPersonal);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("PersonalB");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickPersonal < 4)
                {

                }
                else if (clickPersonal >= 4)
                {
                    clickPersonal = 0;
                }
                break;
            case 3:
                Personal.interactable = false;
                break;
        }
    }

    //_____________PY Archivos
    public void BotonPYArchResulatados(int i)
    {
        switch (i)
        {
            case 1:
                clickResultados++;
                Debug.Log("Boton materiales boton Resultados " + clickResultados);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Resultados");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickResultados < 4)
                {

                }
                else if (clickResultados >= 4)
                {
                    clickResultados = 0;
                }
                break;
            case 3:
                Resultados.interactable = false;
                break;
        }
    }

    public void BotonPYArchResultadosB(int i)
    {
        switch (i)
        {
            case 1:
                clickResultadosB++;
                Debug.Log("Boton materiales boton ResultadosB " + clickResultadosB);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("BResultados");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {
                            // Conserva el GameObject, no se hace nada
                        }
                        else
                        {
                            // Si el GameObject no tiene el tag "VirusControl", se destruye
                            Destroy(obj);
                        }
                    }
                }

                if (clickResultadosB < 4)
                {

                }
                else if (clickResultadosB >= 4)
                {
                    clickResultadosB = 0;
                }
                break;
            case 3:
                ResultadosB.interactable = false;
                break;
        }
    }

    public void BotonPYArchProgramas(int i)
    {
        switch (i)
        {
            case 1:
                clickProgramas++;
                Debug.Log("Boton materiales boton Programas " + clickProgramas);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Programas");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        {}
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickProgramas < 4)
                {

                }
                else if (clickProgramas >= 4)
                {
                    clickProgramas = 0;
                }
                break;
            case 3:
                Programas.interactable = false;
                break;
        }
    }
    public void BotonPYArchProgramasB(int i)
    {
        switch (i)
        {
            case 1:
                clickProgramasB++;
                Debug.Log("Boton materiales boton ProgramasB " + clickProgramasB);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("BProgramas");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickProgramasB < 4)
                {

                }
                else if (clickProgramasB >= 4)
                {
                    clickProgramasB = 0;
                }
                break;
            case 3:
                ProgramasB.interactable = false;
                break;
        }
    }
    public void BotonPYArchContratos(int i)
    {
        switch (i)
        {
            case 1:
                clickContratos++;
                Debug.Log("Boton materiales boton Contratos " + clickContratos);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Contratos");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickContratos < 4)
                {

                }
                else if (clickContratos >= 4)
                {
                    clickContratos = 0;
                }
                break;
            case 3:
                Contratos.interactable = false;
                break;
        }
    }
    public void BotonPYArchContratosB(int i)
    {
        switch (i)
        {
            case 1:
                clickContratosB++;
                Debug.Log("Boton materiales boton ContratosB " + clickContratosB);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("BContratos");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickContratosB < 4)
                {

                }
                else if (clickContratosB >= 4)
                {
                    clickContratosB = 0;
                }
                break;
            case 3:
                ContratosB.interactable = false;
                break;
        }
    }
    public void BotonPYArchContactos(int i)
    {
        switch (i)
        {
            case 1:
                clickContactos++;
                Debug.Log("Boton materiales boton Contactos " + clickContactos);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Contactos");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickContactos < 4)
                {

                }
                else if (clickContactos >= 4)
                {
                    clickContactos = 0;
                }
                break;
            case 3:
                Contactos.interactable = false;
                break;
        }
    }
    public void BotonPYArchContactosB(int i)
    {
        switch (i)
        {
            case 1:
                clickContactosB++;
                Debug.Log("Boton materiales boton ContactosB " + clickContactosB);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("BContactos");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickContactosB < 4)
                {

                }
                else if (clickContactosB >= 4)
                {
                    clickContactosB = 0;
                }
                break;
            case 3:
                ContactosB.interactable = false;
                break;
        }
    }
    public void BotonPYArchBlackMoon(int i)
    {
        switch (i)
        {
            case 1:
                clickBM++;
                Debug.Log("Boton materiales boton BlackMoon" + clickBM);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("BlackMoon");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickBM < 4)
                {

                }
                else if (clickBM >= 4)
                {
                    clickBM = 0;
                }
                break;
            case 3:
                BlackMoon.interactable = false;
                break;
        }
    }
    public void BotonPYArchChains(int i)
    {
        switch (i)
        {
            case 1:
                clickChains++;
                Debug.Log("Boton materiales boton Chais" + clickChains);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Chans");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickChains < 4)
                {

                }
                else if (clickChains >= 4)
                {
                    clickChains = 0;
                }
                break;
            case 3:
                Chains.interactable = false;
                break;
        }
    }
    public void BotonPYArchEmpresa(int i)
    {
        switch (i)
        {
            case 1:
                clickEmpresa++;
                Debug.Log("Boton materiales boton Empresa" + clickEmpresa);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Empresa");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickEmpresa < 4)
                {

                }
                else if (clickEmpresa >= 4)
                {
                    clickEmpresa = 0;
                }
                break;
            case 3:
                Empresa.interactable = false;
                break;
        }
    }
    public void BotonPYArchAuditorias(int i)
    {
        switch (i)
        {
            case 1:
                clickAudi++;
                Debug.Log("Boton materiales boton Empresa" + clickAudi);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Auditorias");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickAudi < 4)
                {

                }
                else if (clickAudi >= 4)
                {
                    clickAudi = 0;
                }
                break;
            case 3:
                Auditorias.interactable = false;
                break;
        }
    }
    public void BotonPYArchRevisiones(int i)
    {
        switch (i)
        {
            case 1:
                clickRevi++;
                Debug.Log("Boton materiales boton Revisiones" + clickRevi);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Revisiones");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickRevi < 4)
                {

                }
                else if (clickRevi >= 4)
                {
                    clickRevi = 0;
                }
                break;
            case 3:
                Revisiones.interactable = false;
                break;
        }
    }
    public void BotonPYArchInventario(int i)
    {
        switch (i)
        {
            case 1:
                clickInv++;
                Debug.Log("Boton materiales boton Inventario" + clickInv);
                break;
            case 2:
                GameObject virusCorrupcion = GameObject.Find("Inventarios");

                if (virusCorrupcion != null)
                {
                    GameObject[] virusCorrupciones = GameObject.FindObjectsOfType<GameObject>().Where(obj => obj.name == virusCorrupcion.name).ToArray();

                    foreach (GameObject obj in virusCorrupciones)
                    {
                        if (obj.CompareTag("Original"))
                        { }
                        else
                        {
                            Destroy(obj);
                        }
                    }
                }

                if (clickInv < 4)
                {

                }
                else if (clickInv >= 4)
                {
                    clickInv = 0;
                }
                break;
            case 3:
                Inventario.interactable = false;
                break;
        }
    }
}