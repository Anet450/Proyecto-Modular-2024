using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using static ObtenerDatos;

public class ListasCamaras : MonoBehaviour
{
    //_______Total
    [SerializeField]
    private GameObject DispotivoConPrefrab;
    private ObtenerDatos obtenerDatos;

    //__Camaras
    [SerializeField]
    private GameObject CamarasTDScrollView; //Puertas totales desactivas 
    public List<Cameras> CamarasTD = new List<Cameras>();
    [SerializeField]
    private GameObject CamarasTAScrollView; //Puertas totales activas
    public List<Cameras> CamarasTA = new List<Cameras>();
    [SerializeField]
    private GameObject CamarasTDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject CamarasTAIScrollView;//Puertas totales activas individual


    //______Piso 1

    [SerializeField]
    private GameObject CamarasP1DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject CamarasP1AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject CamarasP1DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject CamarasP1AIScrollView;

    //_____Piso 2

    [SerializeField]
    private GameObject CamarasP2DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject CamarasP2AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject CamarasP2DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject CamarasP2AIScrollView;

    //_____Piso 3

    [SerializeField]
    private GameObject CamarasP3DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject CamarasP3AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject CamarasP3DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject CamarasP3AIScrollView;

    //_____Site

    [SerializeField]
    private GameObject CamarasSDScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject CamarasSAScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject CamarasSDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject CamarasSAIScrollView;
    // Start is called before the first frame update
    void Start()
    {
        obtenerDatos = this.gameObject.AddComponent<ObtenerDatos>();
        CamarasTotalesActivas();
        CamarasTotalesDesactivas();

        CamarasP1Act();
        CamarasP1Desac();

        CamarasP2Act();
        CamarasP2Desac();

        CamarasP3Act();
        CamarasP3Desac();

        CamarasSiteAct();
        CamarasSiteDesac();
    }

    //_______Activas
    public void CamarasTotalesActivas()
    {
        obtenerDatos.GetCamera(ListaCamarasTotalesActivas);
    }

    public void ListaCamarasTotalesActivas(List<Cameras> CamarasActTotal)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTA = CamarasActTotal.Where(comp => comp.Status == "Activos" && comp.EnSistema != "No").ToList();

        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasTAScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasTAIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void CamarasP1Act()
    {
        obtenerDatos.GetCamera(ListasCamarasP1Act);
    }

    public void ListasCamarasP1Act(List<Cameras> CamarasP1Act)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTA = CamarasP1Act.Where(comp => comp.Status == "Activos" && comp.EnSistema == "Piso 1" && comp.EnSistema != "No").ToList();

        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasP1AScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasP1AIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }
    public void CamarasP2Act()
    {
        obtenerDatos.GetCamera(ListaCamarasP2Act);
    }

    public void ListaCamarasP2Act(List<Cameras> CamarasP2Act)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTA = CamarasP2Act.Where(comp => comp.Status == "Activos" && comp.EnSistema == "Piso 2" && comp.EnSistema != "No").ToList();

        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasP2AScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasP2AIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void CamarasP3Act()
    {
        obtenerDatos.GetCamera(ListaCamarasP3Act);
    }

    public void ListaCamarasP3Act(List<Cameras> CamarasP3Act)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTA = CamarasP3Act.Where(comp => comp.Status == "Activos" && comp.EnSistema == "Piso 3" && comp.EnSistema != "No").ToList();

        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasP3AScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasP3AIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void CamarasSiteAct()
    {
        obtenerDatos.GetCamera(ListaCamarasSiteAct);
    }

    public void ListaCamarasSiteAct(List<Cameras> CamarasSiteAct)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTA = CamarasSiteAct.Where(comp => comp.Status == "Activos" && comp.EnSistema == "Piso 1" && comp.EnSistema != "No").ToList();

        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasSAScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTA.Count > 0)
        {
            foreach (Cameras camara in CamarasTA)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasSAIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    //________Desactivas

    public void CamarasTotalesDesactivas()
    {
        obtenerDatos.GetCamera(ListaCamarasTotalesDesactivas);
    }
    
    public void ListaCamarasTotalesDesactivas(List<Cameras> CamarasDesacTotal)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTD = CamarasDesacTotal.Where(comp => comp.Status == "Desactiva" && comp.EnSistema != "No").ToList();

        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasTDScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasTDIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void CamarasP1Desac()
    {
        obtenerDatos.GetCamera(ListaCamarasP1Desac);
    }

    public void ListaCamarasP1Desac(List<Cameras> CamarasP1Desac)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTD = CamarasP1Desac.Where(comp => comp.Status == "Desactiva" && comp.EnSistema == "Piso 1" && comp.EnSistema != "No").ToList();

        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasP1DScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasP1DIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void CamarasP2Desac()
    {
        obtenerDatos.GetCamera(ListaCamarasP2Act);
    }

    public void ListCamarasP2Desac(List<Cameras> CamarasP2Desac)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTD = CamarasP2Desac.Where(comp => comp.Status == "Desactiva" && comp.EnSistema == "Piso 2" && comp.EnSistema != "No").ToList();

        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasP2DScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasP2DIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    } 

    public void CamarasP3Desac()
    {
        obtenerDatos.GetCamera(ListaCamarasP3Desac);
    }

    public void ListaCamarasP3Desac(List<Cameras> CamarasP3Desac)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTD = CamarasP3Desac.Where(comp => comp.Status == "Desactiva" && comp.EnSistema == "Piso 1" && comp.EnSistema != "No").ToList();

        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasP3DScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasP3DIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void CamarasSiteDesac()
    {
        obtenerDatos.GetCamera(ListaCamarasSiteDesac);
    }

    public void ListaCamarasSiteDesac(List<Cameras> CamarasSiteDesac)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        CamarasTD = CamarasSiteDesac.Where(comp => comp.Status == "Desactiva" && comp.EnSistema == "Site" && comp.EnSistema != "No").ToList();

        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesActiva = Instantiate(DispotivoConPrefrab, CamarasSDScrollView.transform);
                CamarasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = CamarasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (CamarasTD.Count > 0)
        {
            foreach (Cameras camara in CamarasTD)
            {
                c += 1;
                var CamarasTotalesIActiva = Instantiate(DispotivoConPrefrab, CamarasSDIScrollView.transform);
                CamarasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = CamarasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = camara.IDCamera + " | " + camara.CameraName + " | " + camara.IPDir + " | " + camara.Site + " | " + camara.Place;
                CamarasTotalesIActiva.SetActive(true);
            }
        }
    }
}
