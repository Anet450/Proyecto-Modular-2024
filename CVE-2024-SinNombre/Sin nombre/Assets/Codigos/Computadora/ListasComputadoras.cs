using System.Collections;
using System.Collections.Generic;
using System.Linq;
using TMPro;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using static ObtenerDatos;

public class ListasComputadoras : MonoBehaviour
{
    //_______Total
    [SerializeField]
    private GameObject DispotivoConPrefrab;
    private ObtenerDatos obtenerDatos;

    //__Computadoras
    [SerializeField]
    private GameObject ComputadorasTDScrollView; //Puertas totales desactivas 
    public List<Computadora_IP> ComputadorasTD = new List<Computadora_IP>();
    [SerializeField]
    private GameObject ComputadorasTAScrollView; //Puertas totales activas
    public List<Computadora_IP> ComputadorasTA = new List<Computadora_IP>();
    [SerializeField]
    private GameObject ComputadorasTDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject ComputadorasTAIScrollView;//Puertas totales activas individual


    //______Piso 1

    [SerializeField]
    private GameObject ComputadorasP1DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject ComputadorasP1AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject ComputadorasP1DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject ComputadorasP1AIScrollView;

    //_____Piso 2

    [SerializeField]
    private GameObject ComputadorasP2DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject ComputadorasP2AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject ComputadorasP2DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject ComputadorasP2AIScrollView;

    //_____Piso 3

    [SerializeField]
    private GameObject ComputadorasP3DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject ComputadorasP3AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject ComputadorasP3DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject ComputadorasP3AIScrollView;

    //_____Site
    [SerializeField]
    private GameObject DispositivoSitePrefrab;

    [SerializeField]
    private GameObject ComputadorasSDScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject ComputadorasSAScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject ComputadorasSDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject ComputadorasSAIScrollView;

    [SerializeField]
    private GameObject ComputadorasTotalActivas;
    [SerializeField]
    private GameObject ComputadorasTotalDesactivadas;

    [SerializeField]
    public MapaControl mapaControl;

    public string idComputerText = "";

    //bool virus_activo = false;
    // Lista computadora
    public List<Computadora_IP> Computadoras = new List<Computadora_IP>();

    // Start is called before the first frame update
    void Start()
    {
        obtenerDatos = this.gameObject.AddComponent<ObtenerDatos>();
        // Crear computadoras activas lista
        obtenerDatos.GetComputadora_IP((List<Computadora_IP> com_) =>
        {
            Computadoras = com_;
            mapaControl.computadoras = Computadoras;
            RenderComputadoras();
        });
        // CompTotalesAct();
        // CompTotalesDesac();

        // CompP1Act();
        // CompP1Desac();

        // CompP2Act();
        // CompP2Desac();

        // CompP3Act();
        // CompP3Desac();

        // CompSiteAct();
    }

    void Update()
    {
        // bandera
        bool virus_activo = false;
        if (Input.GetKeyDown(KeyCode.A))
        {
            virus_activo = true;
            Debug.Log("virus_activo = true");
        }
        if (virus_activo)
        {
            DesactivarComputadoras();
            // para evitar que se repita siempre
            virus_activo = false;
        }
    }

    // Desactivar computadoras no en Site
    public void DesactivarComputadoras()
    {
        foreach (var computadora in Computadoras)
        {
            if (!computadora.Location.Contains("Site")) {
                   computadora.Status = "Desactivada";
            }
        }
        mapaControl.computadoras = Computadoras;
        RenderComputadoras();
    }

    public void RenderComputadoras()
    {
        int activas = Computadoras.Count(p => p.Status == "Activa");
        int desactivas = Computadoras.Count(p => p.Status.Contains("Desactivada"));
        ComputadorasTotalActivas.GetComponent<TMP_Text>().text = activas.ToString();
        ComputadorasTotalDesactivadas.GetComponent<TMP_Text>().text = desactivas.ToString();
        ListaCompTotalAct(Computadoras);
        ListaCompP1Act(Computadoras);
        ListaCompP2Act(Computadoras);
        ListaCompP3Act(Computadoras);
        ListaCompTotalDesac(Computadoras);
        ListaCompP1Desac(Computadoras);
        ListaCompP2Desac(Computadoras);
        ListaCompP3Desac(Computadoras);
        ListaCompSiteAct(Computadoras);
        ListaCompSiteDesac(Computadoras);
    }

    //_____Activas

    public void ListaCompTotalAct(List<Computadora_IP> CompActTotal)
    {
        if (ComputadorasTAScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasTAScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -52f, -3.5765f);
        ComputadorasTA = CompActTotal.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No" && comp.En_Sistema != "Site").ToList();

        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasTAScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasTAIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaCompP1Act(List<Computadora_IP> CompP1Act)
    {
        if (ComputadorasP1AScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasP1AScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -52f, -3.5765f);
        ComputadorasTA = CompP1Act.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No" && comp.En_Sistema == "Piso 1").ToList();

        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasP1AScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasP1AIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }


    public void ListaCompP2Act(List<Computadora_IP> CompP2Act)
    {

        if (ComputadorasP2AScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasP2AScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -52f, -3.5765f);
        ComputadorasTA = CompP2Act.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No" && comp.En_Sistema == "Piso 2").ToList();

        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasP2AScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasP2AIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaCompP3Act(List<Computadora_IP> CompP3Act)
    {
        if (ComputadorasP3AScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasP3AScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -52f, -3.5765f);
        ComputadorasTA = CompP3Act.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No" && comp.En_Sistema == "Piso 3").ToList();

        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasP3AScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasP3AIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }
    //_____Desactivadas

    public void ListaCompTotalDesac(List<Computadora_IP> CompDesacTotal)
    {
        if (ComputadorasTDScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasTDScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -46f, -3.5765f);
        ComputadorasTD = CompDesacTotal.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No" && comp.En_Sistema != "Site").ToList();

        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasTDScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasTDIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }


    public void ListaCompP1Desac(List<Computadora_IP> CompP1Desac)
    {
        if (ComputadorasP1DScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasP1DScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -46f, -3.5765f);
        ComputadorasTD = CompP1Desac.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No" && comp.En_Sistema == "Piso 1").ToList();

        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasP1DScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasP1DIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaCompP2Desac(List<Computadora_IP> CompP2Desac)
    {
        if (ComputadorasP2DScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasP2DScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -46f, -3.5765f);
        ComputadorasTD = CompP2Desac.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No" && comp.En_Sistema == "Piso 2").ToList();

        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasP2DScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasP2DIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaCompP3Desac(List<Computadora_IP> CompP3Desac)
    {
        if (ComputadorasP3DScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasP3DScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -46f, -3.5765f);
        ComputadorasTD = CompP3Desac.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No" && comp.En_Sistema == "Piso 3").ToList();

        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispotivoConPrefrab, ComputadorasP3DScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispotivoConPrefrab, ComputadorasP3DIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }
    //Site

    public void ListaCompSiteAct(List<Computadora_IP> CompSiteAct)
    {
        if (ComputadorasSAScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasSAScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -52f, -3.5765f);
        ComputadorasTA = CompSiteAct.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No" && comp.En_Sistema == "Site").ToList();

        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispositivoSitePrefrab, ComputadorasSAScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTA.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTA)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispositivoSitePrefrab, ComputadorasSAIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);

            }
        }
    }

    public void ListaCompSiteDesac(List<Computadora_IP> CompSiteDesac)
    {
        if (ComputadorasSDScrollView.transform.childCount > 0)
        {
            foreach (Transform child in ComputadorasSDScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 100f;
        int c = 0;
        Vector3 posicion = new Vector3(455f, -46f, -3.5765f);
        ComputadorasTD = CompSiteDesac.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No" && comp.En_Sistema == "Site").ToList();

        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesActiva = Instantiate(DispositivoSitePrefrab, ComputadorasSDScrollView.transform);
                ComputadorasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (ComputadorasTD.Count > 0)
        {
            foreach (Computadora_IP computadora in ComputadorasTD)
            {
                c += 1;
                var ComputadorasTotalesIActiva = Instantiate(DispositivoSitePrefrab, ComputadorasSDIScrollView.transform);
                ComputadorasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = ComputadorasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = computadora.IDComputer + " | " + computadora.ComputerName + " | " + computadora.IpDirection + " | " + computadora.Description + " | " + computadora.Site_Location + " | " + computadora.Location;
                ComputadorasTotalesIActiva.SetActive(true);
            }
        }
    }
}
