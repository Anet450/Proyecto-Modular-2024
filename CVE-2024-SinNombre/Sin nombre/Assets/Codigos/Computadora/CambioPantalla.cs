using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CambioPantalla : MonoBehaviour
{
    //Punto a donde las pantallas se moveran para simular las ventanas.
    [SerializeField]
    private Transform PantallaOriginal;

    //Variables creadas para elegir la pantalla a cambiar.
    [SerializeField]
    private GameObject PantallaAnterior;
    [SerializeField]
    private GameObject PantallaPYP;
    [SerializeField]
    private GameObject PantallaPYS;
    [SerializeField]
    private GameObject PantallaPYBD;
    [SerializeField]
    private GameObject PantallaControl;
    [SerializeField]
    private GameObject PantallaArchivo;

    public GameObject Denegacion;


    //Variable creada que nos permite elegir la pantalla original para ocultarla
    [SerializeField]
    private GameObject PantallaOculta;


    public void PantallaO()//Funcion encargada del cambio a las pantallas originales (Boton X)
    {
        PantallaAnterior.transform.position = PantallaOriginal.transform.position;
        PantallaOculta.SetActive(!PantallaOculta.activeInHierarchy);
    }

    public void AppPYP()//Funcion encargada del cambio a la Aplicacion Proyect Y Program
    {
        GameObject Activado = GameObject.Find("Control PYP"); //La variable se encargara de buscar el objecto con el nombre PYP AppDir

        if (Activado == null) //si Activado no encuentra algun objecto con el nombre AppDir entonces querra decir que ya ha sido eliminado.
        {
            Debug.Log("Ya no esta compa");
            Denegado();
        }
        else
        {
            //Se encarga de traer la pantalla de la aplicacion Project Y Program a la computadora
            PantallaPYP.transform.position = PantallaOriginal.transform.position;
            //Oculta la el fondo de pantalla de la computadora.
            PantallaOculta.SetActive(!PantallaOculta.activeInHierarchy);

        }

    }

    public void AppPYS()//Funcion encargada del cambio a la aplicacion Proyect Y Special
    {
        GameObject Activado = GameObject.Find("PYS AppDir"); //La variable se encargara de buscar el objecto con el nombre PYP AppDir

        if (Activado == null)
        {
            Debug.Log("Ya no esta compa");
            Denegado();
        }
        else
        {
            PantallaPYS.transform.position = PantallaOriginal.transform.position;
            PantallaOculta.SetActive(!PantallaOculta.activeInHierarchy);
        }
    }

    public void AppPYBD()//Funcion encargada del cambio a la aplicacion Proyect Y BD
    {
        GameObject Activado = GameObject.Find("Control PYBD"); //La variable se encargara de buscar el objecto con el nombre PYP AppDir

        if (Activado == null)
        {
            Debug.Log("Ya no esta compa");
            Denegado();
        }
        else
        {
            PantallaPYBD.transform.position = PantallaOriginal.transform.position;
            PantallaOculta.SetActive(!PantallaOculta.activeInHierarchy);
        }
    }

    public void AppControl()//Funcion encargada del cambio a la aplicacion Control
    {
        GameObject Activado = GameObject.Find("AplicacionControl"); //La variable se encargara de buscar el objecto con el nombre PYP AppDir

        if (Activado == null)
        {
            Debug.Log("Ya valiste");
            Denegado();
        }
        else
        {
            PantallaControl.transform.position = PantallaOriginal.transform.position;
            PantallaOculta.SetActive(!PantallaOculta.activeInHierarchy);
        }
    }

    public void AppArchivo()//Funcion encargada del cambio a la aplicacion Archivo
    {
        GameObject Activado = GameObject.Find("AplicacionArchivos"); //La variable se encargara de buscar el objecto con el nombre PYP AppDir

        if (Activado == null)
        {
            Debug.Log("No esta");
            Denegado();
        }
        else
        {
            PantallaArchivo.transform.position = PantallaOriginal.transform.position;
            PantallaOculta.SetActive(!PantallaOculta.activeInHierarchy);

        }
    }

    public void Denegado()//Funcion encargada de avisar al usuario que la aplicacion no esta disponible
    {

        Denegacion.SetActive(!Denegacion.activeInHierarchy);
    }
}