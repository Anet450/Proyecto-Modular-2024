using System.Collections;
using System.Collections.Generic;
using System.Linq;
using TMPro;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using static ObtenerDatos;

public class ListasControl : MonoBehaviour
{
    //_______Total
    public bool virus_activo;

    [SerializeField]
    private GameObject DispotivoConPrefrab;
    private ObtenerDatos obtenerDatos;

    //__Puertas
    [SerializeField]
    private GameObject PuertasTDScrollView; //Puertas totales desactivas 
    public List<Door> PuertasTD = new List<Door>();
    [SerializeField]
    private GameObject PuertasTAScrollView; //Puertas totales activas
    public List<Door> PuertasTA = new List<Door>();
    [SerializeField]
    private GameObject PuertasTDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasTAIScrollView;//Puertas totales activas individual
    // Label de puertas
    [SerializeField]
    private GameObject PuertasActivasTotal;
    [SerializeField]
    private GameObject PuertasDesactivasTotal;


    //______Piso 1

    [SerializeField]
    private GameObject PuertasP1DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasP1AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasP1DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasP1AIScrollView;

    //_____Piso 2

    [SerializeField]
    private GameObject PuertasP2DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasP2AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasP2DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasP2AIScrollView;

    //_____Piso 3

    [SerializeField]
    private GameObject PuertasP3DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasP3AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasP3DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasP3AIScrollView;

    //_____Site

    [SerializeField]
    private GameObject PuertasSDScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasSAScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasSDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasSAIScrollView;

    // Lisa de objetos
    public List<Door> Puertas = new List<Door>();

    [SerializeField]
    public MapaControl mapaControl;
    public Virus virus;
    public Tiempo inicio;

    void Start()
    {
        obtenerDatos = this.gameObject.AddComponent<ObtenerDatos>();
        // Obtener de obtenerDatos a Puertas
        obtenerDatos.GetDoors((List<Door> d) =>
        {
            Puertas = d;
            mapaControl.doors = d;
            RenderPuertas();
        });

    }

    void Update()
    {
        
        /*
        if (Input.GetKeyDown(KeyCode.A))
        {
            virus_activo = true;
        }*/
        if (virus_activo)
        {
            DesactivarPuertas();
            // para evitar que se repita siempre
            virus_activo = false;
        }
    }

    public void DesactivarPuertas()
    {
        foreach (Door puerta in Puertas)
        {
            puerta.Status = "Desactivada";
        }
        mapaControl.doors = Puertas;
        RenderPuertas();
    }

    private void RenderPuertas()
    {
        // Contar puertas activas y desactivas
        int activas = Puertas.Count(p => p.Status == "Activa");
        int desactivas = Puertas.Count(p => p.Status == "Desactivada");
        PuertasActivasTotal.GetComponent<TMP_Text>().text = activas.ToString();
        PuertasDesactivasTotal.GetComponent<TMP_Text>().text = desactivas.ToString();

        ListaPuertasTotalesActivas(Puertas);
        ListaPuertasPiso1Activas(Puertas);
        ListaPuertaP2Act(Puertas);
        ListaPuertaP3Act(Puertas);
        ListaPuertaSAct(Puertas);
        ListaPuertasTotalesDesactivas(Puertas);
        ListaPuertasP1Desac(Puertas);
        ListaPuertasP2Desc(Puertas);
        ListaPuertasP3Desc(Puertas);
        ListaPuertasSDesc(Puertas);
    }

    public void ListaPuertasTotalesActivas(List<Door> PuertasAct)
    {
        if (PuertasTAScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasTAScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasAct.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasTAScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasTAIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site +  " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }

    }
    
    public void ListaPuertasPiso1Activas(List<Door> PuertasActP1)
    {
        if (PuertasP1AScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasP1AScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActP1.Where(comp => comp.Status == "Activa" && comp.En_Sistema.Contains("Piso 1")  && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasP1AScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasP1AIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }
    public void ListaPuertaP2Act(List<Door> PuertasActP2)
    {
        if (PuertasP2AScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasP2AScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActP2.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Piso 2" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasP2AScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasP2AIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaPuertaP3Act(List<Door> PuertasActP3)
    {
        if (PuertasP3AScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasP3AScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActP3.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Piso 3" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasP3AScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasP3AIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaPuertaSAct(List<Door> PuertasActSite)
    {
        if (PuertasSAScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasSAScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActSite.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Site" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasSAScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasSAIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void ListaPuertasTotalesDesactivas(List<Door> PuertasDesc)
    {
        if (PuertasTDScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasTDScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasDesc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasTDScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasTDIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void ListaPuertasP1Desac(List<Door> PuertasP1Desc)
    {
        if (PuertasP1DScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasP1DScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasP1Desc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Piso 1" && comp.En_Sistema != "No").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasP1DScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasP1DIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }


    public void ListaPuertasP2Desc(List<Door> PuertasP2Desc)
    {
        if (PuertasP2DScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasP2DScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasP2Desc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Piso 2" && comp.En_Sistema != "No" ).ToList(); 

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasP2DScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasP2DIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void ListaPuertasP3Desc(List<Door> PuertasP3Desc)
    {
        if (PuertasP3DScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasP3DScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasP3Desc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Piso 3" && comp.En_Sistema != "No").ToList();
        //PuertasTD = PuertasP3Desc.Where(comp => comp.En_Sistema == "Piso 3").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasP3DScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasP3DIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void ListaPuertasSDesc(List<Door> PuertasSiteDesc)
    {
        if (PuertasSDScrollView.transform.childCount > 0)
        {
            foreach (Transform child in PuertasSDScrollView.transform)
            {
                GameObject.Destroy(child.gameObject);
            }
        }
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasSiteDesc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Site" && comp.En_Sistema != "No").ToList();
        //PuertasTD = PuertasSiteDesc.Where(comp => comp.En_Sistema == "Site").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasSDScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasSDIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }
    
}
