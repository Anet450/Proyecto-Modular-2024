using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using static ObtenerDatos;

public class ListasControl : MonoBehaviour
{
    //_______Total
    [SerializeField]
    private GameObject DispotivoConPrefrab;
    private ObtenerDatos obtenerDatos;

    //__Puertas
    [SerializeField]
    private GameObject PuertasTDScrollView; //Puertas totales desactivas 
    public List<Door> PuertasTD = new List<Door>();
    [SerializeField]
    private GameObject PuertasTAScrollView; //Puertas totales activas
    public List<Door> PuertasTA = new List<Door>();
    [SerializeField]
    private GameObject PuertasTDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasTAIScrollView;//Puertas totales activas individual

    //______Piso 1

    [SerializeField]
    private GameObject PuertasP1DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasP1AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasP1DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasP1AIScrollView;

    //_____Piso 2

    [SerializeField]
    private GameObject PuertasP2DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasP2AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasP2DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasP2AIScrollView;

    //_____Piso 3

    [SerializeField]
    private GameObject PuertasP3DScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasP3AScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasP3DIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasP3AIScrollView;

    //_____Site

    [SerializeField]
    private GameObject PuertasSDScrollView; //Puertas totales desactivas 
    [SerializeField]
    private GameObject PuertasSAScrollView; //Puertas totales activas
    [SerializeField]
    private GameObject PuertasSDIScrollView; //Puertas totates desactivas individual
    [SerializeField]
    private GameObject PuertasSAIScrollView;

    
    void Start()
    {
        obtenerDatos = this.gameObject.AddComponent<ObtenerDatos>();
        PuertasTotalesActivas();
        PuertasTotalesDesactivadas();

        PuertasPiso1Act();
        PuertasPiso1Desac();

        PuertasP2Act();
        PuertasP2Desc();

        PuertasP3Act();
        PuertasPiso3Desc();

        PuertasSAct();
        PuertasSDesc();
        
    }

   

    public void PuertasTotalesActivas()
    {
        obtenerDatos.GetDoors(ListaPuertasTotalesActivas);
    }
    public void ListaPuertasTotalesActivas(List<Door> PuertasAct)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasAct.Where(comp => comp.Status == "Activa" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasTAScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasTAIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site +  " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }

    }

    public void PuertasPiso1Act()
    {
        obtenerDatos.GetDoors(ListaPuertasPiso1Activas);
    }
    public void ListaPuertasPiso1Activas(List<Door> PuertasActP1)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActP1.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Piso 1" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasP1AScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasP1AIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }


    public void PuertasP2Act()
    {
        obtenerDatos.GetDoors(ListaPuertaP2Act);
    }

    public void ListaPuertaP2Act(List<Door> PuertasActP2)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActP2.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Piso 2" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasP2AScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasP2AIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void PuertasP3Act()
    {
        obtenerDatos.GetDoors(ListaPuertaP3Act);
    }

    public void ListaPuertaP3Act(List<Door> PuertasActP3)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActP3.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Piso 3" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasP3AScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasP3AIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }

    public void PuertasSAct()
    {
        obtenerDatos.GetDoors(ListaPuertaSAct);
    }

    public void ListaPuertaSAct(List<Door> PuertasActSite)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTA = PuertasActSite.Where(comp => comp.Status == "Activa" && comp.En_Sistema == "Site" && comp.En_Sistema != "No").ToList();

        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesActiva = Instantiate(DispotivoConPrefrab, PuertasSAScrollView.transform);
                PuertasTotalesActiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesActiva.SetActive(true);
            }
        }

        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTA.Count > 0)
        {
            foreach (Door puerta in PuertasTA)
            {
                c += 1;
                var PuertasTotalesIActiva = Instantiate(DispotivoConPrefrab, PuertasSAIScrollView.transform);
                PuertasTotalesIActiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIActiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIActiva.SetActive(true);
            }
        }
    }

    //_______Desactivados
    public void PuertasTotalesDesactivadas()
    {
        obtenerDatos.GetDoors(ListaPuertasTotalesDesactivas);
    }

    public void ListaPuertasTotalesDesactivas(List<Door> PuertasDesc)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasDesc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema != "No").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasTDScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasTDIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void PuertasPiso1Desac()
    {
        obtenerDatos.GetDoors(ListaPuertasP1Desac);
    }

    public void ListaPuertasP1Desac(List<Door> PuertasP1Desc)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasP1Desc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Piso 1" && comp.En_Sistema != "No").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasP1DScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasP1DIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void PuertasP2Desc()
    {
        obtenerDatos.GetDoors(ListaPuertasP2Desc);
    }

    public void ListaPuertasP2Desc(List<Door> PuertasP2Desc)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasP2Desc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Piso 2" && comp.En_Sistema != "No" ).ToList(); 

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasP2DScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasP2DIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void PuertasPiso3Desc()
    {
        obtenerDatos.GetDoors(ListaPuertasP3Desc);
    }

    public void ListaPuertasP3Desc(List<Door> PuertasP3Desc)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasP3Desc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Piso 3" && comp.En_Sistema != "No").ToList();
        //PuertasTD = PuertasP3Desc.Where(comp => comp.En_Sistema == "Piso 3").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasP3DScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasP3DIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }

    public void PuertasSDesc()
    {
        obtenerDatos.GetDoors(ListaPuertasSDesc);
    }

    public void ListaPuertasSDesc(List<Door> PuertasSiteDesc)
    {
        float separacionVertical = 55f;
        int c = 0;
        Vector3 posicion = new Vector3(452f, -23.8f, -3.5765f);
        PuertasTD = PuertasSiteDesc.Where(comp => comp.Status == "Desactivada" && comp.En_Sistema == "Site" && comp.En_Sistema != "No").ToList();
        //PuertasTD = PuertasSiteDesc.Where(comp => comp.En_Sistema == "Site").ToList();

        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesDesactiva = Instantiate(DispotivoConPrefrab, PuertasSDScrollView.transform);
                PuertasTotalesDesactiva.transform.localPosition = posicion;

                posicion.y -= separacionVertical;
                Text textoLabel = PuertasTotalesDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesDesactiva.SetActive(true);
            }
        }
        //____Puertas Individuales
        Vector3 posicionIndividual = new Vector3(445f, -37f, 0f);
        if (PuertasTD.Count > 0)
        {
            foreach (Door puerta in PuertasTD)
            {
                c += 1;
                var PuertasTotalesIDesactiva = Instantiate(DispotivoConPrefrab, PuertasSDIScrollView.transform);
                PuertasTotalesIDesactiva.transform.localPosition = posicionIndividual;

                posicionIndividual.y -= separacionVertical;
                Text textoLabel = PuertasTotalesIDesactiva.transform.Find("TextoControl").GetComponent<Text>();
                textoLabel.text = puerta.IDDoor + " | " + puerta.DoorName + " | " + puerta.IPDirection + " | " + puerta.Location_Site + " | " + puerta.Location;
                PuertasTotalesIDesactiva.SetActive(true);
            }
        }
    }
    
}
