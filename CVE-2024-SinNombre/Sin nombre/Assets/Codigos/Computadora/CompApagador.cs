using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using static ObtenerDatos;

public class CompApagador : MonoBehaviour
{
    //Lugar donde aparece el apagador
    [SerializeField]
    private GameObject Prefrab;
    private GameObject Lugar; 
    private GameObject Apagador;

    [SerializeField]
    private GameObject boton;
    [SerializeField]
    private GameObject cancel;

    //optener los datos
    private ObtenerDatos obtenerDatos;

    [SerializeField]
    private GameObject[] controladorAcceso = new GameObject[0]; 

    private Virus virus;
    private ChatControlador chatDesbl;

    public List<Computadora_IP> Computadoras = new List<Computadora_IP>();
    public List<GetPasswords_C> ContraseñasComp = new List<GetPasswords_C>();
    public List<GetPasswords_BM> ContraseñasBM = new List<GetPasswords_BM>();
    

    [SerializeField]
    private GameObject Denegado;
    bool m;

    public Text TextoAu;

    public void EleccionSig(int c)
    {
        switch (c)
        {
            case 1:
                controladorAcceso[4].SetActive(true);
                controladorAcceso[3].SetActive(true);
                break;
            case 2:
                controladorAcceso[4].SetActive(true);
                controladorAcceso[2].SetActive(true);
                break;
        }
    }

    public void Start()
    {
        obtenerDatos = this.gameObject.AddComponent<ObtenerDatos>();
        obtenerDatos.GetComputadora_IP((List<Computadora_IP> Computadora_IP_) =>
        {
            Computadoras = Computadora_IP_;
        });
    }

    public void Update()
    {
        virus = GameObject.FindObjectOfType<Virus>();
        chatDesbl = GameObject.FindObjectOfType<ChatControlador>();
    }

    public void ApagarBuscar()
    {

        Lugar = GameObject.Find("ListaA");
        if (Lugar == null)
        {
            Debug.Log("Ya esta apagado");
        }
        ApagadoInstanciado();
        Debug.Log("Hello");
    }

    public void Cancelar()
    {
        Apagador = GameObject.Find("SiteApagado(Clone)");
        if (Apagador.activeInHierarchy == true)
        {
            Destroy(Apagador);
        }
    }

    public void ComputadoraSeleccionada()
    {
        boton.GetComponent<Image>().color = new Color32(93, 173, 226, 255);
    }

    public void CancelarOperacion()
    {
        boton.GetComponent<Image>().color = Color.white;
    }

    //_______________Apagador_________________-
    public void ApagadoInstanciado()
    {
        Vector3 posicion = new Vector3(455f, -53f, -3.5765f);
        var Apagadores = Instantiate(Prefrab, Lugar.gameObject.transform);
    }

    
    public void AutentificacionCoordClaseS(string texto)
    {
        string Autorizacion = "nCGwIhs3a6fSLeN";
        if (m = Autorizacion == texto)
        {
            controladorAcceso[0].SetActive(false);
            controladorAcceso[1].SetActive(true);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
        }
    }

    public void AutentificacionAutorizaciones(string texto)
    {
        string Autorizacion = "Password1234";
        if (m = Autorizacion == texto)
        {
            controladorAcceso[1].SetActive(false);
            controladorAcceso[4].SetActive(true);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
        }
    }

    public void Codigo(string dato)
    {
        foreach(Computadora_IP computadora in Computadoras)
        {
            if(computadora.IDComputer == dato)
            {
                if (dato == "1COMPSCP7")
                {
                    controladorAcceso[5].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "2COMPSECP1")
                {
                    controladorAcceso[6].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "3COMPSECP2")
                {
                    controladorAcceso[7].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "4COMPSECP3")
                {
                    controladorAcceso[8].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "5COMPSECP4")
                {
                    controladorAcceso[9].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "6COMPSECP5")
                {
                    controladorAcceso[10].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "7COMPSECP6")
                {
                    controladorAcceso[11].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "8COMPSECP7")
                {
                    controladorAcceso[12].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "11LAPTSCITA")
                {
                    controladorAcceso[13].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "13COMPSAFO1")
                {
                    controladorAcceso[14].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
                else if (dato == "17LAPTSPO2TA")
                {
                    controladorAcceso[15].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                    chatDesbl.activacionOpc(13);
                }
                else if (dato == "18LAPTSPO2TB")
                {
                    controladorAcceso[16].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                    //chatDesbl.activacionOpc(14);
                }
                else if (dato == "29LAPTSJPM1TA")
                {
                    controladorAcceso[17].SetActive(true);
                    controladorAcceso[3].SetActive(false);
                }
            }
        }
    }
    public void AutentificacionAdmRedes(string texto)
    {
        string Autorizacion = "8aU6J95Tno19KJX";
        if (m = Autorizacion == texto)
        {
            controladorAcceso[2].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }
    public void C1OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password1COMPSCP7";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[5].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C2OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password2COMPSECP1";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[6].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C3OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password2COMPSECP1";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[7].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C4OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password3COMPSECP2";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[8].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C5OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password4COMPSECP3";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[9].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C6OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password5COMPSECP4";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[10].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C7OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password6COMPSECP5";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[11].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C8OMPSCP7Autentificacion(string contra)
    {
        string Autorizacion = "Password7COMPSECP6";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[12].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void L11APTSCITAAutentificacion(string contra)
    {
        string Autorizacion = "kVMCzZ]pcl[z";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[13].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void C13OMPSAFO1Autentificacion(string contra)
    {
        string Autorizacion = "KamoYuki14+a";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[14].SetActive(false);
            Denegado.SetActive(false);
            virus.malaDec = true;
             virus.final5 = 5;
             PlayerPrefs.SetInt("final5", virus.final5);
            Debug.Log("virus.malaDec = true;");
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void L17APTSPO2TAAutentificacion(string contra)
    {
        string Autorizacion = "hVpzEY_gizjI";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[15].SetActive(false);
            Denegado.SetActive(false);
            virus.personaE = true;
            virus.final2 = 2;
            PlayerPrefs.SetInt("final2", virus.final2);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void L18APTSPO2TBAutentificacion(string contra)
    {
        string Autorizacion = "Y3zd0BNSWWY2n";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[16].SetActive(false);
            Denegado.SetActive(false);
            virus.eliminado = true;
            virus.final3 = 3;
            PlayerPrefs.SetInt("final3", virus.final3);
            Debug.Log("virus.eliminado = true;");

        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }

    public void L29APTSJPM1TAAutentificacion(string contra)
    {
        string Autorizacion = "HsYjSweiW_QN";
        if (m = Autorizacion == contra)
        {
            controladorAcceso[17].SetActive(false);
            Debug.Log("Computadoras apagadas");
            Debug.Log("Perdida por mala decision");
            Denegado.SetActive(false);
            virus.malaDec = true;
            virus.final4 = 4;
            PlayerPrefs.SetInt("final4", virus.final4);
        }
        else if (m = Autorizacion != contra)
        {
            Denegado.SetActive(false);
            Cancelar();
        }
    }
}
