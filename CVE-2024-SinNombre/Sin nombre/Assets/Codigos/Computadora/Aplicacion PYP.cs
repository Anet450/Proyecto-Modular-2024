using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class AplicacionPYP : MonoBehaviour
{
    [SerializeField]
    private GameObject AppManuales;
    [SerializeField]
    private GameObject AppAsociados;
    [SerializeField]
    private GameObject AppInventario;

    [SerializeField]
    private GameObject[] controladorAcceso = new GameObject[0];
    [SerializeField]
    private GameObject[] aplicacionesactivas = new GameObject[0];

    bool m;
    public Virus virus;

    public CorrupcionV nivelAvance;

    [SerializeField]
    private GameObject Denegado;

    //public Virus virus;

    public void Update()
    {
        IngresarContraseña(); //Autorizacion a la base de datos.

    }

    public void AppMan()//Funcion encargada del cambio a las pantallas Funcion Manuales
    {
        AppManuales.SetActive(!AppManuales.activeInHierarchy);
        AppInventario.SetActive(false);
        AppAsociados.SetActive(false);

    }

    public void AppAso()//Funcion encargada del cambio a las pantallas Funcion Asociados
    {
        AppAsociados.SetActive(!AppAsociados.activeInHierarchy);
        AppManuales.SetActive(false);
        AppInventario.SetActive(false);

    }

    public void AppInv()//Funcion encargada del cambio a las pantallas Funcion Inventarios
    {
        AppInventario.SetActive(!AppInventario.activeInHierarchy);
        AppManuales.SetActive(false);
        AppAsociados.SetActive(false);

        
    }

    public void IngresarContraseña()
    {

        if (Denegado.activeInHierarchy == true && controladorAcceso[0].activeInHierarchy == true)
        {
            if (Input.GetKeyDown(KeyCode.RightAlt))
            {
                controladorAcceso[1].SetActive(!controladorAcceso[1].activeInHierarchy);
                Debug.Log("tecla apretada");
            }
        }
    }
    public void AutentificacionCoordClaseA(string texto)
    {
        string Autorizacion = "ZL0uX0Ps9cbsoDf";

        if (m = Autorizacion == texto)
        {
            Denegado.SetActive(false);
            controladorAcceso[0].SetActive(false);
            Debug.Log("contraseña correcta");
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(true);
            controladorAcceso[0].SetActive(false);
            if (virus.avance >= 35 && virus.avance <= 45)
            {
                aplicacionesactivas[0].SetActive(false);
            }
        }
    }
}
