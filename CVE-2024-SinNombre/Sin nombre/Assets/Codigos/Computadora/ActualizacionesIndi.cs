using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Video;
using static ObtenerDatos;

public class ActualizacionesIndi : MonoBehaviour
{
    bool m;
    bool autorizado;

    [SerializeField]
    private GameObject Contraseña;
    public TMPro.TextMeshProUGUI ContraseñaIncorrecta;
    public GameObject Incorrecto;

    [SerializeField]
    private GameObject Aplicar;
    [SerializeField]
    private GameObject ContraseñaComputo;
    [SerializeField]
    private GameObject Validacion;

    public AplicacionPYS actualizacion;
    string AutorizacionVa;
    //_______Seleccion de la 2da ruta
    [SerializeField]
    private TMPro.TextMeshProUGUI DatoErroneo, Valido;

    public void Update()
    {
        if (autorizado == false)
        {
            Aplicar.SetActive(false);
            DatoErroneo.text = "Alguno de tus datos estan erroneos, verifica la informacion";
            DatoErroneo.color = Color.red;
        }
        else if (autorizado == true)
        {
            Aplicar.SetActive(true);
        }
    }
    public void Autorizar()
    {
        Aplicar.SetActive(true);
        autorizado = true;
    }
    public void NoAutorizado()
    {
        Aplicar.SetActive(false);
        autorizado = false;
    }

    public void TieneContraseña()
    {
        Contraseña.SetActive(true);
    }

    public void AutorizarAct(string texto)
    {
        string Autorizacion = "Password1234";
        if (m = Autorizacion == texto)
        {
            Autorizar();
            Incorrecto.SetActive(false);
            Debug.Log("contraseña correcta");
        }
        else if (m = Autorizacion != texto)
        {
            Incorrecto.SetActive(true);
            ContraseñaIncorrecta.text = "Contraseña Incorrecta";
            ContraseñaIncorrecta.color = Color.red;
            NoAutorizado();
            Debug.Log("ContraseñaIncorrecta");

        }
    }
    public void ProcesoEspecial(int a)
    {
        switch (a)
        {
            case 1:
                ContraseñaComputo.SetActive(false);
                break;
            case 2:
                ContraseñaComputo.SetActive(false);
                break;
            case 3:
                ContraseñaComputo.SetActive(false);
                break;
            case 4:
                ContraseñaComputo.SetActive(true);
                AutorizacionVa = "1233";
                break;
        }
    }
    public void ValidacionLLave(string texto)
    {
        
        if(m = AutorizacionVa == texto)
        {
            Valido.text = "Validacion llave correcta";
            Valido.color = Color.green;
            Validacion.SetActive(true);
            Invoke("MensajeVal", 3f);

        }else if(m = AutorizacionVa != texto)
        {
            Validacion.SetActive(true);
            Valido.text = "Validacion llave incorrecta";
            Valido.color = Color.red;
        }
    }

    public void MensajeVal()
    {
        Validacion.SetActive(false);
        ContraseñaComputo.SetActive(false);
    }

    public void Opcion(int a)
    {
        switch (a)
        {
            case 1:
                Autorizar();
                break;
            case 2:
                NoAutorizado();
                TieneContraseña();
                break;
        }
    }
  
}
