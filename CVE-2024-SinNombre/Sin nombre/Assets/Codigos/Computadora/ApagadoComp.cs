using Newtonsoft.Json;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Networking;

public class ApagadoComp : MonoBehaviour
{
   /* [SerializeField]
    private GameObject computadoraEncendida;
    [SerializeField]
    private GameObject computadoraApagada;*/

    public class Computer
    {
        public Computer(string IDComputer, string En_Sistema)
        {
            this.IDComputer = IDComputer;
            this.En_Sistema = En_Sistema;
        }
        string IDComputer;
        string En_Sistema;
    }

    [SerializeField]
    private GameObject[] controladorAcceso = new GameObject[0];
    [SerializeField]
    private GameObject[] aplicacionesactivas = new GameObject[0];

    public bool LapPentesterTA;
    public bool LapPentesterTB;
    bool CompAF;
    bool NoSistema;
    [SerializeField]
    private GameObject ComputadoraPentesterTA;
    [SerializeField]
    private GameObject ComputadoraPentesterTB;
    [SerializeField]
    private GameObject ComputadoraAnalista;
    [SerializeField]
    private GameObject ControlAppDir;
    [SerializeField]
    private GameObject Nota;

    bool m;
    public Virus virus;

    public CorrupcionV nivelAvance;

    [SerializeField]
    private GameObject Denegado;
    public void Apagar(int i)
    {
        
        switch (i) {
            case 1:
                LapPentesterTA = true;
                LapPentesterTB = false;
                break;
            case 2:
                LapPentesterTA = false;
                LapPentesterTB = true;
                break;
            case 3:
                LapPentesterTA = false;
                LapPentesterTB = false;
                NoSistema = true;
                CompAF = false;
                break;
            case 4:
                LapPentesterTA = false;
                LapPentesterTB = false;
                NoSistema = false;
                CompAF = true;
                break;
                
        }
        Computer computerTA = new Computer("17LAPTSPO2TA", (LapPentesterTA) ? "Si" : "No");
        Computer computerTB = new Computer("17LAPTSPO2TB", (LapPentesterTB) ? "Si" : "No");
        // Put that objects into a PUT in localhost:8000/api/gameplay/computer with a JSON format
        StartCoroutine(PuComputerToServer(computerTA));
        StartCoroutine(PuComputerToServer(computerTB));


    }

    public IEnumerator PuComputerToServer(Computer computer)
    {
        string json = JsonConvert.SerializeObject(computer); // Serializamos el objeto Play a JSON
        var uwr = new UnityWebRequest("https://cve-2024-sinnombre-c1a5c43cfc5f.herokuapp.com/api/gameplay/computer", "PUT");
        byte[] jsonToSend = new System.Text.UTF8Encoding().GetBytes(json);
        uwr.uploadHandler = (UploadHandler)new UploadHandlerRaw(jsonToSend);
        uwr.downloadHandler = (DownloadHandler)new DownloadHandlerBuffer();
        uwr.SetRequestHeader("Content-Type", "application/json");
        // Enviamos la solicitud y esperamos hasta que regrese
        yield return uwr.SendWebRequest();

        if (uwr.result == UnityWebRequest.Result.ConnectionError)
        {
            Debug.Log("Error While Sending: " + uwr.error);
        }
        else
        {
            Debug.Log("Received: " + uwr.downloadHandler.text);
        }
    }

    public void Ingresar()
    {
        controladorAcceso[0].SetActive(!controladorAcceso[0].activeInHierarchy);
    }

    public void AutentificacionCoordClaseS(string texto)
    {
        string Autorizacion = "nCGwIhs3a6fSLeN";
        if (m = Autorizacion == texto)
        {
            controladorAcceso[0].SetActive(false);
            controladorAcceso[1].SetActive(true);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
        }
    }

    public void AutentificacionAutorizaciones(string texto)
    {
        string Autorizacion = "Password1234";
        if (m = Autorizacion == texto)
        {
            controladorAcceso[1].SetActive(false);
            if (LapPentesterTA == true && LapPentesterTB == false)
            {
                controladorAcceso[2].SetActive(true);
            }
            else if (LapPentesterTB == true && LapPentesterTA == false)
            {
                controladorAcceso[3].SetActive(true);
            }
            else if(NoSistema == true)
            {
                virus.malaDec = true;
                //virus.final6 = 6;
                //PlayerPrefs.SetInt("final6",virus.final6);
                Debug.Log("virus.malaDec = true;");
            }else if(CompAF == true)
            {
                controladorAcceso[4].SetActive(true);
            }
        }
        else if (m = Autorizacion != texto)
        {

            Denegado.SetActive(false);
        }
    }

    public void AutentificacionLabTAPentester(string texto)
    {
        string Autorizacion = "hVpzEY_gizjI";
        if (m = Autorizacion == texto)
        {
            controladorAcceso[2].SetActive(false);
            virus.eliminado = true;
            Debug.Log("virus.personaE = true;");
            Denegado.SetActive(false);
            ControlAppDir.SetActive(true);
            Nota.SetActive(false);
            Debug.Log("Computadora Apagada, PersonaEquivocada");
            ComputadoraPentesterTA.SetActive(false);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
        }
    }

    public void AutentificacionLabTBPentester(string texto)
    {
        string Autorizacion = "Y3zd0BNSWWY2n";
        if (m = Autorizacion == texto)
        {
            virus.personaE = true;
            Debug.Log("virus.eliminado = true;");
            ComputadoraPentesterTB.SetActive(false);
            ControlAppDir.SetActive(true);
            Nota.SetActive(false);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
        }
    }

    public void AutentificacionCompAuxF(string texto)
    {
        string Autorizacion = "KamoYuki14+a";
        if (m = Autorizacion == texto)
        {
            Denegado.SetActive(false);
            aplicacionesactivas[0].SetActive(false);
            aplicacionesactivas[1].SetActive(false);
            virus.malaDec = true;
            //virus.final5 = 5;
            //PlayerPrefs.SetInt("final5",virus.final5);
            Debug.Log("virus.malaDec = true;");
            ComputadoraAnalista.SetActive(false);
            ControlAppDir.SetActive(true);
            Nota.SetActive(false);
        }
        else if (m = Autorizacion != texto)
        {
            Denegado.SetActive(false);
        }
    }
}
