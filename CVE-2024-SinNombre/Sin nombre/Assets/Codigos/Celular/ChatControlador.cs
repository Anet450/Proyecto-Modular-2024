using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;
using UnityEngine.Rendering;
using UnityEngine.UI;
using static UnityEngine.Rendering.DebugUI;

public class ChatControlador : MonoBehaviour
{
    GameObject chatT1;
    GameObject chatT2;

    public Virus virus;
    public ControladorContraseñas contraseña;

    [SerializeField]
    private GameObject Anterior;
    
    public GameObject[] Actual = new GameObject[1];

    public GameObject[] globosTextos = new GameObject[1];
    public GameObject[] respuestasUsuario = new GameObject[1];
    public GameObject[] eleccionesGuardas = new GameObject[1]; //Guarda las elecciones del usuario.
    public TMPro.TextMeshProUGUI[] respuestasGuardas = new TMPro.TextMeshProUGUI[1];
    public GameObject[] chatseliminar = new GameObject[1];
    public TMPro.TextMeshProUGUI elecion;
    public int c,c2; 
    bool cT;
    public bool iniciarS;
    //Tarea 2
    int ca = 0;
    bool cj;
    public bool RutaT1;
    public bool RutaT2;


    public GameObject[] tarea1 = new GameObject[1];
    public GameObject[] tarea2 = new GameObject[1];
    // Start is called before the first frame update
    void Start()
    {
        chatT1 = GameObject.Find("Tarea1");
        chatT2 = GameObject.Find("Tarea2");

        
    }

    public void SalirChat(int salir)
    {
        
        switch(salir)
        {
            case 0:
                Anterior.SetActive(false);
                break;
            case 1:
                Actual[0].SetActive(false);
                Actual[1].SetActive(false);
                Actual[2].SetActive(false);
                //respuestasUsuario[0].SetActive(false);
                Anterior.SetActive(true);
                break;
            case 2:
                Actual[0].SetActive(false);
                Actual[3].SetActive(false);
                Actual[4].SetActive(false);
                respuestasUsuario[0].SetActive(false);
                Anterior.SetActive(true);
                break;
             case 3:
                Actual[0].SetActive(false);
                Actual[5].SetActive(false);
                Actual[6].SetActive(false);
                //respuestasUsuario[0].SetActive(false);
                Anterior.SetActive(true);
                break;
            case 4:
                Actual[0].SetActive(false);
                Actual[7].SetActive(false);
                Actual[8].SetActive(false);
                //respuestasUsuario[0].SetActive(false);
                Anterior.SetActive(true);
                break;
            case 5:
                Actual[11].SetActive(false);
                Actual[9].SetActive(false);
                Actual[10].SetActive(false);
                Anterior.SetActive(true);
                break;
        }
    }

    public void Tarea1()
    {
        chatT1.SetActive(true);
        chatT2.SetActive(false);
    }
    public void Tarea2()
    {
        chatT1.SetActive(false);
        chatT2.SetActive(true);

    }

    public void verificadorT1()
    {
        RutaT1 = true;
        RutaT2 = false;
        
        tarea1[0].SetActive(true);
        tarea2[0].SetActive(false);
        tarea2[1].SetActive(false);
        tarea2[2].SetActive(false);
        tarea2[3].SetActive(false);
        tarea2[4].SetActive(false);
        
    }

    public void verificador()
    {
        if(RutaT1 == true && RutaT2 == false)
        {
            verificadorT1();
        }else if(RutaT2 == true && RutaT2 == true)
        {
            verificadorT2();
        }
    }
    public void verificadorT2()
    {
        RutaT2 = true;
        RutaT1 = false;

        tarea2[0].SetActive(true);
        tarea1[0].SetActive(false);
        tarea1[1].SetActive(false);
        tarea1[2].SetActive(false);
        tarea1[3].SetActive(false);
        tarea1[4].SetActive(false);
    }

    public void selectorT(int i) //selector de rutas
    {

        switch (i)
        {   //Priema eleccion
            case 1: //Tarea 1 eleccion
                globosTextos[0].SetActive(true);
                Invoke("GT1", 2f);
                break;

            case 2: //Tarea 2 eleccion
                globosTextos[1].SetActive(true);
                Invoke("GT2", 2f);
                break;
            //Segunda eleccion Tarea 1.
            case 3:
                respuestasUsuario[0].SetActive(true);
                Destroy(respuestasUsuario[1]);
                Destroy(respuestasUsuario[2]);
                elecion.text = "Que para eso no necesitan \n" +
                                "acceso a la base de datos";
                eleccionesGuardas[0].SetActive(true);
                respuestasGuardas[0].text = elecion.text;
                respuestasUsuario[3].SetActive(true);
                break;
            case 4:
                respuestasUsuario[0].SetActive(true);
                Destroy(respuestasUsuario[1]);
                Destroy(respuestasUsuario[2]);
                elecion.text = "Suele pasar";
                eleccionesGuardas[0].SetActive(true);
                respuestasGuardas[0].text = elecion.text;
                respuestasUsuario[4].SetActive(true);
                break;
            //Elecion si decide ir a Control o preguntar en el chat
            case 5: //Usado para aplicaciones
                c = 1;
                cT = true;
                eleccionesGuardas[4].SetActive(true);
                break;
            case 6:
                cT = true;
                eleccionesGuardas[2].SetActive(true);
                break;

            // Tarea 2.
            case 7:
                respuestasUsuario[0].SetActive(true);
                Destroy(respuestasUsuario[1]);
                Destroy(respuestasUsuario[2]);
                elecion.text = "¿Te cae mal Jim?";
                eleccionesGuardas[0].SetActive(true);
                respuestasGuardas[0].text = elecion.text;
                respuestasUsuario[3].SetActive(true);
                break;
            case 8:
                respuestasUsuario[0].SetActive(false);
                Destroy(respuestasUsuario[1]);
                Destroy(respuestasUsuario[2]);
                elecion.text = "";
                eleccionesGuardas[0].SetActive(true);
                respuestasGuardas[0].text = elecion.text;
                respuestasUsuario[4].SetActive(true);
                break;
        }
    }

    public void SiguienteDialogo(int d) //Tarea 1
    {  
        switch (d)
        {
            case 1:
                selectorT(1);
                break;
            case 2:
                globosTextos[3].SetActive(true);
                Invoke("GT1P2", 6f);
                break;
            case 3:
                if (cT == true)
                {   c++;
                    if (c == 2)
                    {
                        eleccionesGuardas[1].SetActive(true);
                    }
                }
                c = 0;
                cT = false;
                break;
            case 4: //Denegacion siguiendo la ruta de apoyo guia.
                if (eleccionesGuardas[1].activeInHierarchy == true)
                {
                    respuestasUsuario[5].SetActive(true);
                    Invoke("MAccesoDen", 2f);
                }
                else if (eleccionesGuardas[2].activeInHierarchy == true)
                {
                    respuestasUsuario[6].SetActive(true);
                    Invoke("MAccesoDen2", 2f);
                }
                break;
            case 5://Virus
                int ct = 0;
                ct++;
                if (ct == 1)
                {
                    iniciarS = true;
                    if (iniciarS == true)
                    {
                        eleccionesGuardas[0].SetActive(true);
                    if (eleccionesGuardas[0].activeInHierarchy == true)
                    {
                        Invoke("GerenteTarea1", 1f);
                        Invoke("HackeoIniciado", 2f);
                        globosTextos[8].SetActive(true);
                        Debug.Log("HackeoIniciado");
                    }
                    }
                    if (iniciarS == true)
                    {
                        eleccionesGuardas[1].SetActive(true);
                        if (eleccionesGuardas[1].activeInHierarchy == true)
                        {
                            Invoke("GerenteTarea2", 1f);
                            Debug.Log("HackeoIniciado2");
                        }
                    }
                }
                break;
            case 6:
                if(iniciarS == true)
                {
                    eleccionesGuardas[2].SetActive(true);
                    eleccionesGuardas[3].SetActive(true);
                    eleccionesGuardas[4].SetActive(true);
                    
                }
                break;
            case 7:
                int cas = 0;
                if (iniciarS == true)
                {
                    cas++;
                    if (cas == 1)
                    {
                        Invoke("GerenteTarea2p1", 3f);
                    }
                }
                break;
        }
    }

    public void SiguienteDialogo2(int d)
    {
        
        switch (d)
        {
            case 1:

                Invoke("GabrielP1T2", 6f);
                break;
            case 2:
                respuestasUsuario[6].SetActive(true);
                Invoke("Jim", 3f);
                cj = true;
                break;
            case 3:
                if(cj == true)
                {
                    ca++;
                    if(ca == 1)
                    {
                        Invoke("JimCT", 2f);
                    }
                }
                break;
            case 4:
                respuestasUsuario[7].SetActive(true);
                Invoke("NoMedeja", 2f);
                break;
            
        }
    }

    
    public void ElegirTarea1(string n)
    {
        if (n == 1.ToString())
        {
            selectorT(3);  
            
        } else if (n == 2.ToString())
        {
            selectorT(4);
        }
    }

    public void ElegirTarea2(string n)
    {
        if (n == 3.ToString())
        {
            selectorT(7);

        }
        else if (n == 4.ToString())
        {
            selectorT(8);
        }

    }

    public void resp(int part)
    {
        
        switch (part) {
            case 1:
                respuestasUsuario[1].SetActive(true);
                respuestasUsuario[2].SetActive(true);
            break;
            case 2:
                
                respuestasUsuario[1].SetActive(true);
                respuestasUsuario[2].SetActive(true);
            break;
        }    
    }

    public void OpcPregutntas(string texto)
    {
        string Menu = "menu";;
        bool s;
        bool opc;
        
        if (iniciarS == true)
        {
            if (s = Menu == texto)
            {
                eleccionesGuardas[18].SetActive(true);
                eleccionesGuardas[4].SetActive(true);
                Invoke("BorradoDeChat", 2f);
            }
            else if (opc = 10.ToString() == texto)
            {
                if (eleccionesGuardas[6].activeInHierarchy == true)
                {
                    elecion.text = "Ocupo la contraseña clasee S de usted";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[9].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                    
                }
            }
             else if (opc = 11.ToString() == texto)
            {
                if(eleccionesGuardas[7].activeInHierarchy == true)
                {
                    elecion.text = "Ocupo la contraseña clase A de usted";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[10].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 12.ToString() == texto)
            {
                if (eleccionesGuardas[8].activeInHierarchy == true)
                {
                    elecion.text = "De casualidad no tiene la contraseña del Administrador de Redes";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[11].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 13.ToString() == texto)
            {
                if (eleccionesGuardas[9].activeInHierarchy == true)
                {
                    elecion.text = "¿Que es la empresa BlacckMoon?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[12].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }            
            else if (opc = 14.ToString() == texto)
            {
                if (eleccionesGuardas[10].activeInHierarchy == true)
                {
                    elecion.text = "¿Que hace la empresa Chains?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[13].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 15.ToString() == texto)
            {
                if (eleccionesGuardas[11].activeInHierarchy == true)
                {
                    elecion.text = "¿Cual es la ubicacion de la computadora central?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[14].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 16.ToString() == texto)
            {
                if (eleccionesGuardas[12].activeInHierarchy == true)
                {
                    elecion.text = " ¿Que laptops o dispositivos tienen acceso a la computadora central?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[15].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 17.ToString() == texto)
            {
                if (eleccionesGuardas[13].activeInHierarchy == true)
                {
                    elecion.text = "¿Como esta el apagado de las maquinas?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[16].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 18.ToString() == texto)
            {
                if (eleccionesGuardas[14].activeInHierarchy == true)
                {
                    elecion.text = "¿Cual es el horario de Jim?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[18].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 19.ToString() == texto)
            {
                if (eleccionesGuardas[15].activeInHierarchy == true)
                {
                    elecion.text = "¿Cual es el horario de Gabriel?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[19].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 20.ToString() == texto)
            {
                if (eleccionesGuardas[16].activeInHierarchy == true)
                {
                    elecion.text = "¿De quien es la Laptop Pentester TB?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[20].SetActive(true);
                    globosTextos[21].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 21.ToString() == texto)
            {
                if (eleccionesGuardas[17].activeInHierarchy == true)
                {
                    elecion.text = "¿De quien es la Laptop Pentester TA?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[22].SetActive(true);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 22.ToString() == texto)
            {
                if (eleccionesGuardas[20].activeInHierarchy == true)
                {
                    elecion.text = "Ocupo la contraseña de autorizaciones";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[23].SetActive(true);
                    globosTextos[25].SetActive(true);
                    globosTextos[26].SetActive(false);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 23.ToString() == texto)
            {
                if (eleccionesGuardas[21].activeInHierarchy == true)
                {
                    elecion.text = "Disculpe ocupo su contraseña clase S";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[23].SetActive(true);
                    globosTextos[26].SetActive(true);
                    globosTextos[25].SetActive(false);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 24.ToString() == texto)
            {
                if (eleccionesGuardas[22].activeInHierarchy == true)
                {
                    elecion.text = " ¿No sabe cual es el horario de Jim?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[24].SetActive(true);
                    globosTextos[27].SetActive(true);
                    globosTextos[28].SetActive(false);
                    Invoke("BorradoDeChat", 2f);
                }
            }
            else if (opc = 25.ToString() == texto)
            {
                if (eleccionesGuardas[23].activeInHierarchy == true)
                {
                    elecion.text = " ¿No sabe cual es el horaario de Gabriel?";
                    respuestasGuardas[0].text = elecion.text;
                    globosTextos[24].SetActive(true);
                    globosTextos[28].SetActive(true);
                    globosTextos[27].SetActive(false);
                    Invoke("BorradoDeChat", 2f);
                }
            }
        }
        }
    
    public void activacionOpc(int a)
    {
        if (iniciarS == true)
        {
            switch (a)
            {
                case 1:
                    globosTextos[17].SetActive(true);
                    break;
                case 2:
                    globosTextos[20].SetActive(true);
                    break;
                case 3:
                    eleccionesGuardas[6].SetActive(true);
                    break;
                case 4:
                    eleccionesGuardas[7].SetActive(true);
                    break;
                case 5:
                    eleccionesGuardas[8].SetActive(true);
                    break;
                case 6:
                    eleccionesGuardas[9].SetActive(true);
                    break;
                case 7:
                    eleccionesGuardas[10].SetActive(true);
                    break;
                case 8:
                    eleccionesGuardas[11].SetActive(true);
                    break;
                case 9:
                    eleccionesGuardas[12].SetActive(true);
                    break;
                case 10:
                    eleccionesGuardas[13].SetActive(true);
                    break;
                case 11:
                    eleccionesGuardas[14].SetActive(true);
                    break;
                case 12:
                    eleccionesGuardas[15].SetActive(true);
                    break;
                case 13:
                    eleccionesGuardas[16].SetActive(true);
                    break;
                case 14:
                    eleccionesGuardas[17].SetActive(true);
                    break;
                case 15:
                    eleccionesGuardas[20].SetActive(true);
                break;
                case 16:
                    eleccionesGuardas[21].SetActive(true);
                    break;
                case 17:
                    eleccionesGuardas[22].SetActive(true);
                    break;
                case 18:
                    eleccionesGuardas[23].SetActive(true);
                    break;
                case 19:
                    eleccionesGuardas[24].SetActive(true);
                    break;
                case 20:
                    eleccionesGuardas[25].SetActive(true);
                    break;
                case 21:
                    eleccionesGuardas[26].SetActive(true);
                    break;


            }
        }
    }

    //Chat Tarea 1 
    public void GT1()
    {
        // empieza la tarea hablando con Manuel
        globosTextos[1].SetActive(true);
        globosTextos[2].SetActive(true);
    }

    public void GT1P2()
    {
        /*Respuesta usuario: Que para eso no necesitan acceso a la base de datos?
        * Eleccion: 
        */
        globosTextos[4].SetActive(true);
        globosTextos[5].SetActive(true);
        globosTextos[6].SetActive(true);
        resp(1);
    }

    public void MAccesoDen()
    {
        globosTextos[7].SetActive(true);
        globosTextos[8].SetActive(true);
    }
    public void MAccesoDen2()
    {
        globosTextos[9].SetActive(true);
        globosTextos[10].SetActive(true);
    }

    public void GerenteTarea1()
    {
        globosTextos[0].SetActive(true);
        globosTextos[1].SetActive(true);
        globosTextos[2].SetActive(true);
        globosTextos[3].SetActive(true);
        respuestasUsuario[0].SetActive(true);
    }
    //chat Tarea 2
    public void GT2()
    {
        //empieza la tarea hablando con Manuel
        globosTextos[2].SetActive(true);
        globosTextos[3].SetActive(true);
        globosTextos[4].SetActive(true);

    }
    public void GabrielP1T2()
    {
        globosTextos[5].SetActive(true);
        globosTextos[6].SetActive(true);
        globosTextos[7].SetActive(true);
    }

    public void Jim()
    {
        globosTextos[10].SetActive(true);
        globosTextos[11].SetActive(true);
        globosTextos[12].SetActive(true);
        eleccionesGuardas[2].SetActive(true);
    }

    public void JimCT()
    {
        globosTextos[8].SetActive(true);
        globosTextos[9].SetActive(true);
        respuestasUsuario[5].SetActive(true);
        respuestasUsuario[0].SetActive(true);
        resp(1);
    }

    public void NoMedeja()
    {
        globosTextos[13].SetActive(true);
        globosTextos[14].SetActive(true);
       
    }

    public void NoMeDejaC(string texto)
    {
        string CLBD = "RvkKl_sPtAAf";
        bool m;

        if(m = CLBD == texto)
        {
            globosTextos[15].SetActive(true);
            respuestasUsuario[8].SetActive(true);
            contraseña.contraselaCorrecta();
            Debug.Log("contraseña correcta");
        }
        else if(m = CLBD != texto) 
        {
            contraseña.contraseñaIncorrecta();
            
        }

    }

    public void GerenteTarea2()
    {
        globosTextos[4].SetActive(true);
    }
    public void GerenteTarea2p1()
    {
        globosTextos[5].SetActive(true);
        globosTextos[6].SetActive(true);
        globosTextos[7].SetActive(true);
        globosTextos[8].SetActive(true);
        respuestasUsuario[1].SetActive(true);
        respuestasUsuario[2].SetActive(true);
        HackeoIniciado();
    }

    //virus corrupcion
    public void HackeoIniciado()
    {
        float inicioSimu = 10;
        virus.avance = inicioSimu;
        globosTextos[8].SetActive(true);
        
    }

    public void ChatsElimados()
    {
        
        Destroy(chatseliminar[0]);
        Destroy(chatseliminar[1]);
        Destroy(chatseliminar[2]);
        Destroy(chatseliminar[3]);
        Destroy(chatseliminar[4]);
        Destroy(chatseliminar[5]);
        Destroy(chatseliminar[6]);
        Destroy(chatseliminar[7]);
        Destroy(chatseliminar[8]);
        Destroy(chatseliminar[9]);
        Destroy(chatseliminar[10]);
        Destroy(chatseliminar[11]);
        Destroy(chatseliminar[12]);
        Invoke("ChatEliminado2", 3f);

    }

    public void ChatEliminado2()
    {
        Destroy(eleccionesGuardas[3]);
        respuestasUsuario[3].SetActive(true);
    }
    public void BorradoDeChat()
    {
        eleccionesGuardas[4].SetActive(false);
        globosTextos[9].SetActive(false);
        globosTextos[10].SetActive(false);
        globosTextos[11].SetActive(false);
        globosTextos[12].SetActive(false);
        globosTextos[13].SetActive(false);
        globosTextos[14].SetActive(false);
        globosTextos[15].SetActive(false);
        globosTextos[16].SetActive(false);
        globosTextos[18].SetActive(false);
        globosTextos[19].SetActive(false);
        globosTextos[21].SetActive(false);
        globosTextos[22].SetActive(false);
        globosTextos[25].SetActive(false);
        globosTextos[26].SetActive(false);
        globosTextos[27].SetActive(false);
        globosTextos[28].SetActive(false);

    }


}
